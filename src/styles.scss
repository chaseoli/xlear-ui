// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
// Plus imports for other components in your app.

@import "src/styles/link-underline-animation";

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$xlear-ui-primary: mat-palette($mat-light-blue, 300, 100, 600);
$xlear-ui-accent: mat-palette($mat-blue-grey, 200, 50, 300);

// The warn palette is optional (defaults to red).
$xlear-ui-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$xlear-ui-theme: mat-light-theme(
  (
    color: (
      primary: $xlear-ui-primary,
      accent: $xlear-ui-accent,
      warn: $xlear-ui-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($xlear-ui-theme);

// Define a custom typography config that overrides the font-family as well as the
// `headlines` and `body-1` levels.
$custom-typography: mat-typography-config(
  $font-family: 'IBM Plex Sans, sans-serif'
);

@include mat-core($custom-typography);

/* You can add global styles to this file, and also import other style files */

html,
body {
  height: 100%;
  margin: 0;
}

.flex-fill {
	// Work-around since @HostBinding will "NOT" compile fxLayout directive (eg: @HostBinding('attr.fxLayout') fxlayout = 'row';)
	// used with host binding (ie: @HostBinding('attr.class') cls = 'flex-fill';) to fill host component (ng-component)
	// see, https://github.com/angular/flex-layout/issues/76
	// the following is equivalent to "fxFlex fxLayout="column"
	flex: 1 1 auto;
	box-sizing: border-box;
	flex-direction: column;
	display: flex;
	width: 100%;
	height: 100%;
	overflow-x: hidden;
}

// default button text to uppercase
button,
form button,
md-card button,
md-dialog-container button {
  //:not(md-menu-item)
  text-transform: uppercase;
}

.text-accent{
  color: map-get($xlear-ui-primary, default)
}
.text-thin{
  font-weight: 300
}

a {
  @include underline-from-left-animation(
    rgba(black, 0.87),
    map-get($xlear-ui-primary, default)
  );
}
